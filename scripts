
function toggleMenu() {
  const navLinks = document.querySelector('.nav-links');
  navLinks.classList.toggle('open');
}




// Fetch weather data from OpenWeatherMap API
async function fetchWeatherData(location) {
  const apiKey = 'd9ec43e5a59355aacaf62acdc4fafd2e';
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${apiKey}`;
  const response = await fetch(url);

  if (response.ok) {
    const weatherData = await response.json();
    displayWeatherData(weatherData);
  } else {
    alert('Error fetching weather data');
  }
}

function displayWeatherData(weatherData) {
  // Display current temperature
  const tempElement = document.querySelector('.weather-card p:nth-child(1)');
  tempElement.textContent = `Current Temperature: ${weatherData.main.temp.toFixed(1)}°C`;

  // Display condition description
  const conditionElement = document.querySelector('.weather-card p:nth-child(2)');
  conditionElement.textContent = `Condition Description: ${weatherData.weather[0].description}`;

  // Display humidity
  const humidityElement = document.querySelector('.weather-card p:nth-child(3)');
  humidityElement.textContent = `Humidity: ${weatherData.main.humidity}%`;
}

// Fetch 3-day temperature forecast from OpenWeatherMap API
async function fetchForecastData(location) {
  const apiKey = 'd9ec43e5a59355aacaf62acdc4fafd2e';
  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&cnt=24&appid=${apiKey}`;
  const response = await fetch(url);

  if (response.ok) {
    const forecastData = await response.json();
    displayForecastData(forecastData);
  } else {
    alert('Error fetching forecast data');
  }
}

function displayForecastData(forecastData) {
  const forecastList = forecastData.list;
  const dailyForecast = [];

  for (let i = 0; i < forecastList.length; i += 8) {
    dailyForecast.push({
      day: new Date(forecastList[i].dt_txt).toLocaleDateString('en-us', { weekday: 'long' }),
      temp: forecastList[i].main.temp.toFixed(1),
    });
  }

  const forecastElement = document.querySelector('.forecast ul');
  dailyForecast.forEach((item, index) => {
    forecastElement.children[index].textContent = `${item.day}: ${item.temp}°C`;
  });
}

